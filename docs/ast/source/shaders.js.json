{
  "type": "File",
  "start": 0,
  "end": 4063,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 157,
      "column": 0
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 4063,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 157,
        "column": 0
      }
    },
    "sourceType": "module",
    "body": [
      {
        "type": "ImportDeclaration",
        "start": 0,
        "end": 41,
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 41
          }
        },
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "start": 9,
            "end": 23,
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 23
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 9,
              "end": 23,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 9
                },
                "end": {
                  "line": 1,
                  "column": 23
                },
                "identifierName": "getScaleFactor"
              },
              "name": "getScaleFactor"
            },
            "local": {
              "type": "Identifier",
              "start": 9,
              "end": 23,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 9
                },
                "end": {
                  "line": 1,
                  "column": 23
                },
                "identifierName": "getScaleFactor"
              },
              "name": "getScaleFactor"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 31,
          "end": 40,
          "loc": {
            "start": {
              "line": 1,
              "column": 31
            },
            "end": {
              "line": 1,
              "column": 40
            }
          },
          "extra": {
            "rawValue": "./Scale",
            "raw": "'./Scale'"
          },
          "value": "./Scale"
        },
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @ignore\n ",
            "start": 43,
            "end": 61,
            "loc": {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 5,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 62,
        "end": 279,
        "loc": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 1
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "FunctionDeclaration",
          "start": 69,
          "end": 279,
          "loc": {
            "start": {
              "line": 6,
              "column": 7
            },
            "end": {
              "line": 15,
              "column": 1
            }
          },
          "id": {
            "type": "Identifier",
            "start": 78,
            "end": 100,
            "loc": {
              "start": {
                "line": 6,
                "column": 16
              },
              "end": {
                "line": 6,
                "column": 38
              },
              "identifierName": "getOrbitShaderFragment"
            },
            "name": "getOrbitShaderFragment",
            "leadingComments": null
          },
          "generator": false,
          "expression": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "start": 103,
            "end": 279,
            "loc": {
              "start": {
                "line": 6,
                "column": 41
              },
              "end": {
                "line": 15,
                "column": 1
              }
            },
            "body": [
              {
                "type": "ReturnStatement",
                "start": 107,
                "end": 277,
                "loc": {
                  "start": {
                    "line": 7,
                    "column": 2
                  },
                  "end": {
                    "line": 14,
                    "column": 4
                  }
                },
                "argument": {
                  "type": "TemplateLiteral",
                  "start": 114,
                  "end": 276,
                  "loc": {
                    "start": {
                      "line": 7,
                      "column": 9
                    },
                    "end": {
                      "line": 14,
                      "column": 3
                    }
                  },
                  "expressions": [],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "start": 115,
                      "end": 275,
                      "loc": {
                        "start": {
                          "line": 7,
                          "column": 10
                        },
                        "end": {
                          "line": 14,
                          "column": 2
                        }
                      },
                      "value": {
                        "raw": "\n    varying vec3 vColor;\n    uniform sampler2D texture;\n\n    void main() {\n      gl_FragColor = vec4(vColor, 1.0) * texture2D(texture, gl_PointCoord);\n    }\n  ",
                        "cooked": "\n    varying vec3 vColor;\n    uniform sampler2D texture;\n\n    void main() {\n      gl_FragColor = vec4(vColor, 1.0) * texture2D(texture, gl_PointCoord);\n    }\n  "
                      },
                      "tail": true
                    }
                  ]
                }
              }
            ],
            "directives": [],
            "trailingComments": null
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @ignore\n ",
              "start": 43,
              "end": 61,
              "loc": {
                "start": {
                  "line": 3,
                  "column": 0
                },
                "end": {
                  "line": 5,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @ignore\n ",
              "start": 281,
              "end": 299,
              "loc": {
                "start": {
                  "line": 17,
                  "column": 0
                },
                "end": {
                  "line": 19,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @ignore\n ",
            "start": 43,
            "end": 61,
            "loc": {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 5,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @ignore\n ",
            "start": 281,
            "end": 299,
            "loc": {
              "start": {
                "line": 17,
                "column": 0
              },
              "end": {
                "line": 19,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 300,
        "end": 2899,
        "loc": {
          "start": {
            "line": 20,
            "column": 0
          },
          "end": {
            "line": 112,
            "column": 1
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "FunctionDeclaration",
          "start": 307,
          "end": 2899,
          "loc": {
            "start": {
              "line": 20,
              "column": 7
            },
            "end": {
              "line": 112,
              "column": 1
            }
          },
          "id": {
            "type": "Identifier",
            "start": 316,
            "end": 336,
            "loc": {
              "start": {
                "line": 20,
                "column": 16
              },
              "end": {
                "line": 20,
                "column": 36
              },
              "identifierName": "getOrbitShaderVertex"
            },
            "name": "getOrbitShaderVertex",
            "leadingComments": null
          },
          "generator": false,
          "expression": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "start": 339,
            "end": 2899,
            "loc": {
              "start": {
                "line": 20,
                "column": 39
              },
              "end": {
                "line": 112,
                "column": 1
              }
            },
            "body": [
              {
                "type": "ReturnStatement",
                "start": 343,
                "end": 2897,
                "loc": {
                  "start": {
                    "line": 21,
                    "column": 2
                  },
                  "end": {
                    "line": 111,
                    "column": 4
                  }
                },
                "argument": {
                  "type": "TemplateLiteral",
                  "start": 350,
                  "end": 2896,
                  "loc": {
                    "start": {
                      "line": 21,
                      "column": 9
                    },
                    "end": {
                      "line": 111,
                      "column": 3
                    }
                  },
                  "expressions": [
                    {
                      "type": "CallExpression",
                      "start": 1393,
                      "end": 1437,
                      "loc": {
                        "start": {
                          "line": 65,
                          "column": 18
                        },
                        "end": {
                          "line": 67,
                          "column": 7
                        }
                      },
                      "callee": {
                        "type": "MemberExpression",
                        "start": 1393,
                        "end": 1417,
                        "loc": {
                          "start": {
                            "line": 65,
                            "column": 18
                          },
                          "end": {
                            "line": 65,
                            "column": 42
                          }
                        },
                        "object": {
                          "type": "CallExpression",
                          "start": 1393,
                          "end": 1409,
                          "loc": {
                            "start": {
                              "line": 65,
                              "column": 18
                            },
                            "end": {
                              "line": 65,
                              "column": 34
                            }
                          },
                          "callee": {
                            "type": "Identifier",
                            "start": 1393,
                            "end": 1407,
                            "loc": {
                              "start": {
                                "line": 65,
                                "column": 18
                              },
                              "end": {
                                "line": 65,
                                "column": 32
                              },
                              "identifierName": "getScaleFactor"
                            },
                            "name": "getScaleFactor"
                          },
                          "arguments": []
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1410,
                          "end": 1417,
                          "loc": {
                            "start": {
                              "line": 65,
                              "column": 35
                            },
                            "end": {
                              "line": 65,
                              "column": 42
                            },
                            "identifierName": "toFixed"
                          },
                          "name": "toFixed"
                        },
                        "computed": false
                      },
                      "arguments": [
                        {
                          "type": "NumericLiteral",
                          "start": 1427,
                          "end": 1428,
                          "loc": {
                            "start": {
                              "line": 66,
                              "column": 8
                            },
                            "end": {
                              "line": 66,
                              "column": 9
                            }
                          },
                          "extra": {
                            "rawValue": 1,
                            "raw": "1"
                          },
                          "value": 1
                        }
                      ]
                    }
                  ],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "start": 351,
                      "end": 1391,
                      "loc": {
                        "start": {
                          "line": 21,
                          "column": 10
                        },
                        "end": {
                          "line": 65,
                          "column": 16
                        }
                      },
                      "value": {
                        "raw": "\n    attribute vec3 fuzzColor;\n    attribute vec3 origin;\n    varying vec3 vColor;\n\n    attribute float size;\n\n    attribute float a;\n    attribute float e;\n    attribute float i;\n    attribute float om;\n    attribute float w;\n    attribute float wBar;\n    attribute float M;\n\n    vec3 getAstroPos() {\n      float i_rad = i;\n      float o_rad = om;\n      float p_rad = wBar;\n\n      float adjusted_e = e;\n      if (e >= 1.0) {\n        adjusted_e = 0.9;\n      }\n\n      // Estimate eccentric and true anom using iterative approximation (this\n      // is normally an intergral).\n      float E0 = M;\n      float E1 = M + adjusted_e * sin(E0);\n      float lastdiff = abs(E1-E0);\n      E0 = E1;\n      for (int foo=0; foo < 100; foo++) {\n        E1 = M + adjusted_e * sin(E0);\n        lastdiff = abs(E1-E0);\n        E0 = E1;\n        if (lastdiff < 0.0000001) {\n          break;\n        }\n      }\n\n      float E = E0;\n      float v = 2.0 * atan(sqrt((1.0+adjusted_e)/(1.0-adjusted_e)) * tan(E/2.0));\n\n      // Compute radius vector.\n      float r = ",
                        "cooked": "\n    attribute vec3 fuzzColor;\n    attribute vec3 origin;\n    varying vec3 vColor;\n\n    attribute float size;\n\n    attribute float a;\n    attribute float e;\n    attribute float i;\n    attribute float om;\n    attribute float w;\n    attribute float wBar;\n    attribute float M;\n\n    vec3 getAstroPos() {\n      float i_rad = i;\n      float o_rad = om;\n      float p_rad = wBar;\n\n      float adjusted_e = e;\n      if (e >= 1.0) {\n        adjusted_e = 0.9;\n      }\n\n      // Estimate eccentric and true anom using iterative approximation (this\n      // is normally an intergral).\n      float E0 = M;\n      float E1 = M + adjusted_e * sin(E0);\n      float lastdiff = abs(E1-E0);\n      E0 = E1;\n      for (int foo=0; foo < 100; foo++) {\n        E1 = M + adjusted_e * sin(E0);\n        lastdiff = abs(E1-E0);\n        E0 = E1;\n        if (lastdiff < 0.0000001) {\n          break;\n        }\n      }\n\n      float E = E0;\n      float v = 2.0 * atan(sqrt((1.0+adjusted_e)/(1.0-adjusted_e)) * tan(E/2.0));\n\n      // Compute radius vector.\n      float r = "
                      },
                      "tail": false
                    },
                    {
                      "type": "TemplateElement",
                      "start": 1438,
                      "end": 2895,
                      "loc": {
                        "start": {
                          "line": 67,
                          "column": 8
                        },
                        "end": {
                          "line": 111,
                          "column": 2
                        }
                      },
                      "value": {
                        "raw": " * a * (1.0 - adjusted_e*adjusted_e) / (1.0 + adjusted_e * cos(v));\n\n      // Compute heliocentric coords.\n      float X = r * (cos(o_rad) * cos(v + p_rad - o_rad) - sin(o_rad) * sin(v + p_rad - o_rad) * cos(i_rad));\n      float Y = r * (sin(o_rad) * cos(v + p_rad - o_rad) + cos(o_rad) * sin(v + p_rad - o_rad) * cos(i_rad));\n      float Z = r * (sin(v + p_rad - o_rad) * sin(i_rad));\n      return vec3(X, Y, Z);\n    }\n\n    /*\n    vec3 getAstroPosFast() {\n      float M1 = ma + (jd - epoch) * n;\n      float theta = M1 + 2. * e * sin(M1);\n\n      float cosT = cos(theta);\n\n      float r = a * (1. - e * e) / (1. + e * cosT);\n      float v0 = r * cosT;\n      float v1 = r * sin(theta);\n\n      float sinOm = sin(om);\n      float cosOm = cos(om);\n      float sinW = sin(w);\n      float cosW = cos(w);\n      float sinI = sin(i);\n      float cosI = cos(i);\n\n      float X = v0 * (cosOm * cosW - sinOm * sinW * cosI) + v1 * (-1. * cosOm * sinW - sinOm * cosW * cosI);\n      float Y = v0 * (sinOm * cosW + cosOm * sinW * cosI) + v1 * (-1. * sinOm * sinW + cosOm * cosW * cosI);\n      float Z = v0 * (sinW * sinI) + v1 * (cosW * sinI);\n\n      return vec3(X, Y, Z);\n    }\n    */\n\n    void main() {\n      vColor = fuzzColor;\n\n      //vec3 newpos = getAstroPosFast() + origin;\n      vec3 newpos = getAstroPos() + origin;\n      vec4 mvPosition = modelViewMatrix * vec4(newpos, 1.0);\n      gl_Position = projectionMatrix * mvPosition;\n      gl_PointSize = size;\n    }\n  ",
                        "cooked": " * a * (1.0 - adjusted_e*adjusted_e) / (1.0 + adjusted_e * cos(v));\n\n      // Compute heliocentric coords.\n      float X = r * (cos(o_rad) * cos(v + p_rad - o_rad) - sin(o_rad) * sin(v + p_rad - o_rad) * cos(i_rad));\n      float Y = r * (sin(o_rad) * cos(v + p_rad - o_rad) + cos(o_rad) * sin(v + p_rad - o_rad) * cos(i_rad));\n      float Z = r * (sin(v + p_rad - o_rad) * sin(i_rad));\n      return vec3(X, Y, Z);\n    }\n\n    /*\n    vec3 getAstroPosFast() {\n      float M1 = ma + (jd - epoch) * n;\n      float theta = M1 + 2. * e * sin(M1);\n\n      float cosT = cos(theta);\n\n      float r = a * (1. - e * e) / (1. + e * cosT);\n      float v0 = r * cosT;\n      float v1 = r * sin(theta);\n\n      float sinOm = sin(om);\n      float cosOm = cos(om);\n      float sinW = sin(w);\n      float cosW = cos(w);\n      float sinI = sin(i);\n      float cosI = cos(i);\n\n      float X = v0 * (cosOm * cosW - sinOm * sinW * cosI) + v1 * (-1. * cosOm * sinW - sinOm * cosW * cosI);\n      float Y = v0 * (sinOm * cosW + cosOm * sinW * cosI) + v1 * (-1. * sinOm * sinW + cosOm * cosW * cosI);\n      float Z = v0 * (sinW * sinI) + v1 * (cosW * sinI);\n\n      return vec3(X, Y, Z);\n    }\n    */\n\n    void main() {\n      vColor = fuzzColor;\n\n      //vec3 newpos = getAstroPosFast() + origin;\n      vec3 newpos = getAstroPos() + origin;\n      vec4 mvPosition = modelViewMatrix * vec4(newpos, 1.0);\n      gl_Position = projectionMatrix * mvPosition;\n      gl_PointSize = size;\n    }\n  "
                      },
                      "tail": true
                    }
                  ]
                }
              }
            ],
            "directives": []
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @ignore\n ",
              "start": 281,
              "end": 299,
              "loc": {
                "start": {
                  "line": 17,
                  "column": 0
                },
                "end": {
                  "line": 19,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": []
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @ignore\n ",
            "start": 281,
            "end": 299,
            "loc": {
              "start": {
                "line": 17,
                "column": 0
              },
              "end": {
                "line": 19,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 2901,
        "end": 3097,
        "loc": {
          "start": {
            "line": 114,
            "column": 0
          },
          "end": {
            "line": 121,
            "column": 2
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 2908,
          "end": 3097,
          "loc": {
            "start": {
              "line": 114,
              "column": 7
            },
            "end": {
              "line": 121,
              "column": 2
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 2914,
              "end": 3096,
              "loc": {
                "start": {
                  "line": 114,
                  "column": 13
                },
                "end": {
                  "line": 121,
                  "column": 1
                }
              },
              "id": {
                "type": "Identifier",
                "start": 2914,
                "end": 2934,
                "loc": {
                  "start": {
                    "line": 114,
                    "column": 13
                  },
                  "end": {
                    "line": 114,
                    "column": 33
                  },
                  "identifierName": "STAR_SHADER_FRAGMENT"
                },
                "name": "STAR_SHADER_FRAGMENT"
              },
              "init": {
                "type": "TemplateLiteral",
                "start": 2937,
                "end": 3096,
                "loc": {
                  "start": {
                    "line": 114,
                    "column": 36
                  },
                  "end": {
                    "line": 121,
                    "column": 1
                  }
                },
                "expressions": [],
                "quasis": [
                  {
                    "type": "TemplateElement",
                    "start": 2938,
                    "end": 3095,
                    "loc": {
                      "start": {
                        "line": 114,
                        "column": 37
                      },
                      "end": {
                        "line": 121,
                        "column": 0
                      }
                    },
                    "value": {
                      "raw": "\n    varying vec3 vColor;\n\n    void main() {\n      float a = 1.0 - 2.0 * length(gl_PointCoord - vec2(0.5, 0.5));\n      gl_FragColor = vec4(vColor, a);\n    }\n",
                      "cooked": "\n    varying vec3 vColor;\n\n    void main() {\n      float a = 1.0 - 2.0 * length(gl_PointCoord - vec2(0.5, 0.5));\n      gl_FragColor = vec4(vColor, a);\n    }\n"
                    },
                    "tail": true
                  }
                ]
              }
            }
          ],
          "kind": "const",
          "leadingComments": [],
          "trailingComments": []
        }
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 3099,
        "end": 3384,
        "loc": {
          "start": {
            "line": 123,
            "column": 0
          },
          "end": {
            "line": 133,
            "column": 2
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 3106,
          "end": 3384,
          "loc": {
            "start": {
              "line": 123,
              "column": 7
            },
            "end": {
              "line": 133,
              "column": 2
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 3112,
              "end": 3383,
              "loc": {
                "start": {
                  "line": 123,
                  "column": 13
                },
                "end": {
                  "line": 133,
                  "column": 1
                }
              },
              "id": {
                "type": "Identifier",
                "start": 3112,
                "end": 3130,
                "loc": {
                  "start": {
                    "line": 123,
                    "column": 13
                  },
                  "end": {
                    "line": 123,
                    "column": 31
                  },
                  "identifierName": "STAR_SHADER_VERTEX"
                },
                "name": "STAR_SHADER_VERTEX"
              },
              "init": {
                "type": "TemplateLiteral",
                "start": 3133,
                "end": 3383,
                "loc": {
                  "start": {
                    "line": 123,
                    "column": 34
                  },
                  "end": {
                    "line": 133,
                    "column": 1
                  }
                },
                "expressions": [],
                "quasis": [
                  {
                    "type": "TemplateElement",
                    "start": 3134,
                    "end": 3382,
                    "loc": {
                      "start": {
                        "line": 123,
                        "column": 35
                      },
                      "end": {
                        "line": 133,
                        "column": 0
                      }
                    },
                    "value": {
                      "raw": "\n    attribute float size;\n    varying vec3 vColor;\n\n    void main() {\n        vColor = color;\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n        gl_PointSize = size;\n        gl_Position = projectionMatrix * mvPosition;\n    }\n",
                      "cooked": "\n    attribute float size;\n    varying vec3 vColor;\n\n    void main() {\n        vColor = color;\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n        gl_PointSize = size;\n        gl_Position = projectionMatrix * mvPosition;\n    }\n"
                    },
                    "tail": true
                  }
                ]
              }
            }
          ],
          "kind": "const",
          "leadingComments": [],
          "trailingComments": []
        }
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 3386,
        "end": 3738,
        "loc": {
          "start": {
            "line": 135,
            "column": 0
          },
          "end": {
            "line": 145,
            "column": 2
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 3393,
          "end": 3738,
          "loc": {
            "start": {
              "line": 135,
              "column": 7
            },
            "end": {
              "line": 145,
              "column": 2
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 3399,
              "end": 3737,
              "loc": {
                "start": {
                  "line": 135,
                  "column": 13
                },
                "end": {
                  "line": 145,
                  "column": 1
                }
              },
              "id": {
                "type": "Identifier",
                "start": 3399,
                "end": 3429,
                "loc": {
                  "start": {
                    "line": 135,
                    "column": 13
                  },
                  "end": {
                    "line": 135,
                    "column": 43
                  },
                  "identifierName": "GENERIC_PARTICLE_SHADER_VERTEX"
                },
                "name": "GENERIC_PARTICLE_SHADER_VERTEX"
              },
              "init": {
                "type": "TemplateLiteral",
                "start": 3432,
                "end": 3737,
                "loc": {
                  "start": {
                    "line": 135,
                    "column": 46
                  },
                  "end": {
                    "line": 145,
                    "column": 1
                  }
                },
                "expressions": [],
                "quasis": [
                  {
                    "type": "TemplateElement",
                    "start": 3433,
                    "end": 3736,
                    "loc": {
                      "start": {
                        "line": 135,
                        "column": 47
                      },
                      "end": {
                        "line": 145,
                        "column": 0
                      }
                    },
                    "value": {
                      "raw": "\n    attribute float size;\n    attribute vec3 customColor;\n    varying vec3 vColor;\n    void main() {\n      vColor = customColor;\n      vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n      gl_PointSize = size * (300.0 / -mvPosition.z);\n      gl_Position = projectionMatrix * mvPosition;\n    }\n",
                      "cooked": "\n    attribute float size;\n    attribute vec3 customColor;\n    varying vec3 vColor;\n    void main() {\n      vColor = customColor;\n      vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n      gl_PointSize = size * (300.0 / -mvPosition.z);\n      gl_Position = projectionMatrix * mvPosition;\n    }\n"
                    },
                    "tail": true
                  }
                ]
              }
            }
          ],
          "kind": "const",
          "leadingComments": [],
          "trailingComments": []
        }
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 3740,
        "end": 4062,
        "loc": {
          "start": {
            "line": 147,
            "column": 0
          },
          "end": {
            "line": 156,
            "column": 2
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 3747,
          "end": 4062,
          "loc": {
            "start": {
              "line": 147,
              "column": 7
            },
            "end": {
              "line": 156,
              "column": 2
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 3753,
              "end": 4061,
              "loc": {
                "start": {
                  "line": 147,
                  "column": 13
                },
                "end": {
                  "line": 156,
                  "column": 1
                }
              },
              "id": {
                "type": "Identifier",
                "start": 3753,
                "end": 3785,
                "loc": {
                  "start": {
                    "line": 147,
                    "column": 13
                  },
                  "end": {
                    "line": 147,
                    "column": 45
                  },
                  "identifierName": "GENERIC_PARTICLE_SHADER_FRAGMENT"
                },
                "name": "GENERIC_PARTICLE_SHADER_FRAGMENT"
              },
              "init": {
                "type": "TemplateLiteral",
                "start": 3788,
                "end": 4061,
                "loc": {
                  "start": {
                    "line": 147,
                    "column": 48
                  },
                  "end": {
                    "line": 156,
                    "column": 1
                  }
                },
                "expressions": [],
                "quasis": [
                  {
                    "type": "TemplateElement",
                    "start": 3789,
                    "end": 4060,
                    "loc": {
                      "start": {
                        "line": 147,
                        "column": 49
                      },
                      "end": {
                        "line": 156,
                        "column": 0
                      }
                    },
                    "value": {
                      "raw": "\n    uniform vec3 color;\n    uniform sampler2D texture;\n    varying vec3 vColor;\n    void main() {\n      gl_FragColor = vec4(color * vColor, 1.0);\n      gl_FragColor = gl_FragColor * texture2D(texture, gl_PointCoord);\n      if (gl_FragColor.a < ALPHATEST) discard;\n    }\n",
                      "cooked": "\n    uniform vec3 color;\n    uniform sampler2D texture;\n    varying vec3 vColor;\n    void main() {\n      gl_FragColor = vec4(color * vColor, 1.0);\n      gl_FragColor = gl_FragColor * texture2D(texture, gl_PointCoord);\n      if (gl_FragColor.a < ALPHATEST) discard;\n    }\n"
                    },
                    "tail": true
                  }
                ]
              }
            }
          ],
          "kind": "const",
          "leadingComments": [],
          "trailingComments": []
        }
      }
    ],
    "directives": []
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\n * @ignore\n ",
      "start": 43,
      "end": 61,
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 5,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @ignore\n ",
      "start": 281,
      "end": 299,
      "loc": {
        "start": {
          "line": 17,
          "column": 0
        },
        "end": {
          "line": 19,
          "column": 3
        }
      }
    }
  ],
  "tokens": [
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 0,
      "end": 6,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 7,
      "end": 8,
      "loc": {
        "start": {
          "line": 1,
          "column": 7
        },
        "end": {
          "line": 1,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "getScaleFactor",
      "start": 9,
      "end": 23,
      "loc": {
        "start": {
          "line": 1,
          "column": 9
        },
        "end": {
          "line": 1,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 24,
      "end": 25,
      "loc": {
        "start": {
          "line": 1,
          "column": 24
        },
        "end": {
          "line": 1,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 26,
      "end": 30,
      "loc": {
        "start": {
          "line": 1,
          "column": 26
        },
        "end": {
          "line": 1,
          "column": 30
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "./Scale",
      "start": 31,
      "end": 40,
      "loc": {
        "start": {
          "line": 1,
          "column": 31
        },
        "end": {
          "line": 1,
          "column": 40
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 40,
      "end": 41,
      "loc": {
        "start": {
          "line": 1,
          "column": 40
        },
        "end": {
          "line": 1,
          "column": 41
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @ignore\n ",
      "start": 43,
      "end": 61,
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 5,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 62,
      "end": 68,
      "loc": {
        "start": {
          "line": 6,
          "column": 0
        },
        "end": {
          "line": 6,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 69,
      "end": 77,
      "loc": {
        "start": {
          "line": 6,
          "column": 7
        },
        "end": {
          "line": 6,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "getOrbitShaderFragment",
      "start": 78,
      "end": 100,
      "loc": {
        "start": {
          "line": 6,
          "column": 16
        },
        "end": {
          "line": 6,
          "column": 38
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 100,
      "end": 101,
      "loc": {
        "start": {
          "line": 6,
          "column": 38
        },
        "end": {
          "line": 6,
          "column": 39
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 101,
      "end": 102,
      "loc": {
        "start": {
          "line": 6,
          "column": 39
        },
        "end": {
          "line": 6,
          "column": 40
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 103,
      "end": 104,
      "loc": {
        "start": {
          "line": 6,
          "column": 41
        },
        "end": {
          "line": 6,
          "column": 42
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 107,
      "end": 113,
      "loc": {
        "start": {
          "line": 7,
          "column": 2
        },
        "end": {
          "line": 7,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 114,
      "end": 115,
      "loc": {
        "start": {
          "line": 7,
          "column": 9
        },
        "end": {
          "line": 7,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "\n    varying vec3 vColor;\n    uniform sampler2D texture;\n\n    void main() {\n      gl_FragColor = vec4(vColor, 1.0) * texture2D(texture, gl_PointCoord);\n    }\n  ",
      "start": 115,
      "end": 275,
      "loc": {
        "start": {
          "line": 7,
          "column": 10
        },
        "end": {
          "line": 14,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 275,
      "end": 276,
      "loc": {
        "start": {
          "line": 14,
          "column": 2
        },
        "end": {
          "line": 14,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 276,
      "end": 277,
      "loc": {
        "start": {
          "line": 14,
          "column": 3
        },
        "end": {
          "line": 14,
          "column": 4
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 278,
      "end": 279,
      "loc": {
        "start": {
          "line": 15,
          "column": 0
        },
        "end": {
          "line": 15,
          "column": 1
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @ignore\n ",
      "start": 281,
      "end": 299,
      "loc": {
        "start": {
          "line": 17,
          "column": 0
        },
        "end": {
          "line": 19,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 300,
      "end": 306,
      "loc": {
        "start": {
          "line": 20,
          "column": 0
        },
        "end": {
          "line": 20,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 307,
      "end": 315,
      "loc": {
        "start": {
          "line": 20,
          "column": 7
        },
        "end": {
          "line": 20,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "getOrbitShaderVertex",
      "start": 316,
      "end": 336,
      "loc": {
        "start": {
          "line": 20,
          "column": 16
        },
        "end": {
          "line": 20,
          "column": 36
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 336,
      "end": 337,
      "loc": {
        "start": {
          "line": 20,
          "column": 36
        },
        "end": {
          "line": 20,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 337,
      "end": 338,
      "loc": {
        "start": {
          "line": 20,
          "column": 37
        },
        "end": {
          "line": 20,
          "column": 38
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 339,
      "end": 340,
      "loc": {
        "start": {
          "line": 20,
          "column": 39
        },
        "end": {
          "line": 20,
          "column": 40
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 343,
      "end": 349,
      "loc": {
        "start": {
          "line": 21,
          "column": 2
        },
        "end": {
          "line": 21,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 350,
      "end": 351,
      "loc": {
        "start": {
          "line": 21,
          "column": 9
        },
        "end": {
          "line": 21,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "\n    attribute vec3 fuzzColor;\n    attribute vec3 origin;\n    varying vec3 vColor;\n\n    attribute float size;\n\n    attribute float a;\n    attribute float e;\n    attribute float i;\n    attribute float om;\n    attribute float w;\n    attribute float wBar;\n    attribute float M;\n\n    vec3 getAstroPos() {\n      float i_rad = i;\n      float o_rad = om;\n      float p_rad = wBar;\n\n      float adjusted_e = e;\n      if (e >= 1.0) {\n        adjusted_e = 0.9;\n      }\n\n      // Estimate eccentric and true anom using iterative approximation (this\n      // is normally an intergral).\n      float E0 = M;\n      float E1 = M + adjusted_e * sin(E0);\n      float lastdiff = abs(E1-E0);\n      E0 = E1;\n      for (int foo=0; foo < 100; foo++) {\n        E1 = M + adjusted_e * sin(E0);\n        lastdiff = abs(E1-E0);\n        E0 = E1;\n        if (lastdiff < 0.0000001) {\n          break;\n        }\n      }\n\n      float E = E0;\n      float v = 2.0 * atan(sqrt((1.0+adjusted_e)/(1.0-adjusted_e)) * tan(E/2.0));\n\n      // Compute radius vector.\n      float r = ",
      "start": 351,
      "end": 1391,
      "loc": {
        "start": {
          "line": 21,
          "column": 10
        },
        "end": {
          "line": 65,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "${",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1391,
      "end": 1393,
      "loc": {
        "start": {
          "line": 65,
          "column": 16
        },
        "end": {
          "line": 65,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "getScaleFactor",
      "start": 1393,
      "end": 1407,
      "loc": {
        "start": {
          "line": 65,
          "column": 18
        },
        "end": {
          "line": 65,
          "column": 32
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1407,
      "end": 1408,
      "loc": {
        "start": {
          "line": 65,
          "column": 32
        },
        "end": {
          "line": 65,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1408,
      "end": 1409,
      "loc": {
        "start": {
          "line": 65,
          "column": 33
        },
        "end": {
          "line": 65,
          "column": 34
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1409,
      "end": 1410,
      "loc": {
        "start": {
          "line": 65,
          "column": 34
        },
        "end": {
          "line": 65,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "toFixed",
      "start": 1410,
      "end": 1417,
      "loc": {
        "start": {
          "line": 65,
          "column": 35
        },
        "end": {
          "line": 65,
          "column": 42
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1417,
      "end": 1418,
      "loc": {
        "start": {
          "line": 65,
          "column": 42
        },
        "end": {
          "line": 65,
          "column": 43
        }
      }
    },
    {
      "type": {
        "label": "num",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": 1,
      "start": 1427,
      "end": 1428,
      "loc": {
        "start": {
          "line": 66,
          "column": 8
        },
        "end": {
          "line": 66,
          "column": 9
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1428,
      "end": 1429,
      "loc": {
        "start": {
          "line": 66,
          "column": 9
        },
        "end": {
          "line": 66,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1436,
      "end": 1437,
      "loc": {
        "start": {
          "line": 67,
          "column": 6
        },
        "end": {
          "line": 67,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1437,
      "end": 1438,
      "loc": {
        "start": {
          "line": 67,
          "column": 7
        },
        "end": {
          "line": 67,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": " * a * (1.0 - adjusted_e*adjusted_e) / (1.0 + adjusted_e * cos(v));\n\n      // Compute heliocentric coords.\n      float X = r * (cos(o_rad) * cos(v + p_rad - o_rad) - sin(o_rad) * sin(v + p_rad - o_rad) * cos(i_rad));\n      float Y = r * (sin(o_rad) * cos(v + p_rad - o_rad) + cos(o_rad) * sin(v + p_rad - o_rad) * cos(i_rad));\n      float Z = r * (sin(v + p_rad - o_rad) * sin(i_rad));\n      return vec3(X, Y, Z);\n    }\n\n    /*\n    vec3 getAstroPosFast() {\n      float M1 = ma + (jd - epoch) * n;\n      float theta = M1 + 2. * e * sin(M1);\n\n      float cosT = cos(theta);\n\n      float r = a * (1. - e * e) / (1. + e * cosT);\n      float v0 = r * cosT;\n      float v1 = r * sin(theta);\n\n      float sinOm = sin(om);\n      float cosOm = cos(om);\n      float sinW = sin(w);\n      float cosW = cos(w);\n      float sinI = sin(i);\n      float cosI = cos(i);\n\n      float X = v0 * (cosOm * cosW - sinOm * sinW * cosI) + v1 * (-1. * cosOm * sinW - sinOm * cosW * cosI);\n      float Y = v0 * (sinOm * cosW + cosOm * sinW * cosI) + v1 * (-1. * sinOm * sinW + cosOm * cosW * cosI);\n      float Z = v0 * (sinW * sinI) + v1 * (cosW * sinI);\n\n      return vec3(X, Y, Z);\n    }\n    */\n\n    void main() {\n      vColor = fuzzColor;\n\n      //vec3 newpos = getAstroPosFast() + origin;\n      vec3 newpos = getAstroPos() + origin;\n      vec4 mvPosition = modelViewMatrix * vec4(newpos, 1.0);\n      gl_Position = projectionMatrix * mvPosition;\n      gl_PointSize = size;\n    }\n  ",
      "start": 1438,
      "end": 2895,
      "loc": {
        "start": {
          "line": 67,
          "column": 8
        },
        "end": {
          "line": 111,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2895,
      "end": 2896,
      "loc": {
        "start": {
          "line": 111,
          "column": 2
        },
        "end": {
          "line": 111,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2896,
      "end": 2897,
      "loc": {
        "start": {
          "line": 111,
          "column": 3
        },
        "end": {
          "line": 111,
          "column": 4
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2898,
      "end": 2899,
      "loc": {
        "start": {
          "line": 112,
          "column": 0
        },
        "end": {
          "line": 112,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 2901,
      "end": 2907,
      "loc": {
        "start": {
          "line": 114,
          "column": 0
        },
        "end": {
          "line": 114,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 2908,
      "end": 2913,
      "loc": {
        "start": {
          "line": 114,
          "column": 7
        },
        "end": {
          "line": 114,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "STAR_SHADER_FRAGMENT",
      "start": 2914,
      "end": 2934,
      "loc": {
        "start": {
          "line": 114,
          "column": 13
        },
        "end": {
          "line": 114,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 2935,
      "end": 2936,
      "loc": {
        "start": {
          "line": 114,
          "column": 34
        },
        "end": {
          "line": 114,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2937,
      "end": 2938,
      "loc": {
        "start": {
          "line": 114,
          "column": 36
        },
        "end": {
          "line": 114,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "\n    varying vec3 vColor;\n\n    void main() {\n      float a = 1.0 - 2.0 * length(gl_PointCoord - vec2(0.5, 0.5));\n      gl_FragColor = vec4(vColor, a);\n    }\n",
      "start": 2938,
      "end": 3095,
      "loc": {
        "start": {
          "line": 114,
          "column": 37
        },
        "end": {
          "line": 121,
          "column": 0
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3095,
      "end": 3096,
      "loc": {
        "start": {
          "line": 121,
          "column": 0
        },
        "end": {
          "line": 121,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3096,
      "end": 3097,
      "loc": {
        "start": {
          "line": 121,
          "column": 1
        },
        "end": {
          "line": 121,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 3099,
      "end": 3105,
      "loc": {
        "start": {
          "line": 123,
          "column": 0
        },
        "end": {
          "line": 123,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 3106,
      "end": 3111,
      "loc": {
        "start": {
          "line": 123,
          "column": 7
        },
        "end": {
          "line": 123,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "STAR_SHADER_VERTEX",
      "start": 3112,
      "end": 3130,
      "loc": {
        "start": {
          "line": 123,
          "column": 13
        },
        "end": {
          "line": 123,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 3131,
      "end": 3132,
      "loc": {
        "start": {
          "line": 123,
          "column": 32
        },
        "end": {
          "line": 123,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3133,
      "end": 3134,
      "loc": {
        "start": {
          "line": 123,
          "column": 34
        },
        "end": {
          "line": 123,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "\n    attribute float size;\n    varying vec3 vColor;\n\n    void main() {\n        vColor = color;\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n        gl_PointSize = size;\n        gl_Position = projectionMatrix * mvPosition;\n    }\n",
      "start": 3134,
      "end": 3382,
      "loc": {
        "start": {
          "line": 123,
          "column": 35
        },
        "end": {
          "line": 133,
          "column": 0
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3382,
      "end": 3383,
      "loc": {
        "start": {
          "line": 133,
          "column": 0
        },
        "end": {
          "line": 133,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3383,
      "end": 3384,
      "loc": {
        "start": {
          "line": 133,
          "column": 1
        },
        "end": {
          "line": 133,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 3386,
      "end": 3392,
      "loc": {
        "start": {
          "line": 135,
          "column": 0
        },
        "end": {
          "line": 135,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 3393,
      "end": 3398,
      "loc": {
        "start": {
          "line": 135,
          "column": 7
        },
        "end": {
          "line": 135,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "GENERIC_PARTICLE_SHADER_VERTEX",
      "start": 3399,
      "end": 3429,
      "loc": {
        "start": {
          "line": 135,
          "column": 13
        },
        "end": {
          "line": 135,
          "column": 43
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 3430,
      "end": 3431,
      "loc": {
        "start": {
          "line": 135,
          "column": 44
        },
        "end": {
          "line": 135,
          "column": 45
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3432,
      "end": 3433,
      "loc": {
        "start": {
          "line": 135,
          "column": 46
        },
        "end": {
          "line": 135,
          "column": 47
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "\n    attribute float size;\n    attribute vec3 customColor;\n    varying vec3 vColor;\n    void main() {\n      vColor = customColor;\n      vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n      gl_PointSize = size * (300.0 / -mvPosition.z);\n      gl_Position = projectionMatrix * mvPosition;\n    }\n",
      "start": 3433,
      "end": 3736,
      "loc": {
        "start": {
          "line": 135,
          "column": 47
        },
        "end": {
          "line": 145,
          "column": 0
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3736,
      "end": 3737,
      "loc": {
        "start": {
          "line": 145,
          "column": 0
        },
        "end": {
          "line": 145,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3737,
      "end": 3738,
      "loc": {
        "start": {
          "line": 145,
          "column": 1
        },
        "end": {
          "line": 145,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 3740,
      "end": 3746,
      "loc": {
        "start": {
          "line": 147,
          "column": 0
        },
        "end": {
          "line": 147,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 3747,
      "end": 3752,
      "loc": {
        "start": {
          "line": 147,
          "column": 7
        },
        "end": {
          "line": 147,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "GENERIC_PARTICLE_SHADER_FRAGMENT",
      "start": 3753,
      "end": 3785,
      "loc": {
        "start": {
          "line": 147,
          "column": 13
        },
        "end": {
          "line": 147,
          "column": 45
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 3786,
      "end": 3787,
      "loc": {
        "start": {
          "line": 147,
          "column": 46
        },
        "end": {
          "line": 147,
          "column": 47
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3788,
      "end": 3789,
      "loc": {
        "start": {
          "line": 147,
          "column": 48
        },
        "end": {
          "line": 147,
          "column": 49
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "\n    uniform vec3 color;\n    uniform sampler2D texture;\n    varying vec3 vColor;\n    void main() {\n      gl_FragColor = vec4(color * vColor, 1.0);\n      gl_FragColor = gl_FragColor * texture2D(texture, gl_PointCoord);\n      if (gl_FragColor.a < ALPHATEST) discard;\n    }\n",
      "start": 3789,
      "end": 4060,
      "loc": {
        "start": {
          "line": 147,
          "column": 49
        },
        "end": {
          "line": 156,
          "column": 0
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4060,
      "end": 4061,
      "loc": {
        "start": {
          "line": 156,
          "column": 0
        },
        "end": {
          "line": 156,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 4061,
      "end": 4062,
      "loc": {
        "start": {
          "line": 156,
          "column": 1
        },
        "end": {
          "line": 156,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 4063,
      "end": 4063,
      "loc": {
        "start": {
          "line": 157,
          "column": 0
        },
        "end": {
          "line": 157,
          "column": 0
        }
      }
    }
  ]
}